services:
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    env_file:
      - ./backend/.env
      - ./.env

  backend:
    build:
      context: backend
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./backend/.env
      - ./.env
    volumes:
      - ./static:/app/static

  frontend:
    build:
      context: frontend
    env_file:
      - ./frontend/.env

  nginx:
    image: nginx:alpine
    command: nginx -g "daemon off;"
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
    restart: on-failure
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert.pem:/etc/cert.pem
      - ./nginx/key.pem:/etc/key.pem
      - ./static:/static
    ports:
      - "80:80"
      - "443:443"

volumes:
  postgres_data:
